// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"treasure/internal/rest/model"
)

// UpdateListOKCode is the HTTP code returned for type UpdateListOK
const UpdateListOKCode int = 200

/*UpdateListOK success 200

swagger:response updateListOK
*/
type UpdateListOK struct {

	/*
	  In: Body
	*/
	Payload *model.State `json:"body,omitempty"`
}

// NewUpdateListOK creates UpdateListOK with default headers values
func NewUpdateListOK() *UpdateListOK {

	return &UpdateListOK{}
}

// WithPayload adds the payload to the update list o k response
func (o *UpdateListOK) WithPayload(payload *model.State) *UpdateListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update list o k response
func (o *UpdateListOK) SetPayload(payload *model.State) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateListServiceUnavailableCode is the HTTP code returned for type UpdateListServiceUnavailable
const UpdateListServiceUnavailableCode int = 503

/*UpdateListServiceUnavailable service error

swagger:response updateListServiceUnavailable
*/
type UpdateListServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *model.Error `json:"body,omitempty"`
}

// NewUpdateListServiceUnavailable creates UpdateListServiceUnavailable with default headers values
func NewUpdateListServiceUnavailable() *UpdateListServiceUnavailable {

	return &UpdateListServiceUnavailable{}
}

// WithPayload adds the payload to the update list service unavailable response
func (o *UpdateListServiceUnavailable) WithPayload(payload *model.Error) *UpdateListServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update list service unavailable response
func (o *UpdateListServiceUnavailable) SetPayload(payload *model.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateListServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

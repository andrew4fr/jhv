// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"treasure/internal/rest/model"
)

// GetNamesOKCode is the HTTP code returned for type GetNamesOK
const GetNamesOKCode int = 200

/*GetNamesOK persons info

swagger:response getNamesOK
*/
type GetNamesOK struct {

	/*
	  In: Body
	*/
	Payload model.Persons `json:"body,omitempty"`
}

// NewGetNamesOK creates GetNamesOK with default headers values
func NewGetNamesOK() *GetNamesOK {

	return &GetNamesOK{}
}

// WithPayload adds the payload to the get names o k response
func (o *GetNamesOK) WithPayload(payload model.Persons) *GetNamesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get names o k response
func (o *GetNamesOK) SetPayload(payload model.Persons) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = model.Persons{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetNamesServiceUnavailableCode is the HTTP code returned for type GetNamesServiceUnavailable
const GetNamesServiceUnavailableCode int = 503

/*GetNamesServiceUnavailable service error

swagger:response getNamesServiceUnavailable
*/
type GetNamesServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *model.Error `json:"body,omitempty"`
}

// NewGetNamesServiceUnavailable creates GetNamesServiceUnavailable with default headers values
func NewGetNamesServiceUnavailable() *GetNamesServiceUnavailable {

	return &GetNamesServiceUnavailable{}
}

// WithPayload adds the payload to the get names service unavailable response
func (o *GetNamesServiceUnavailable) WithPayload(payload *model.Error) *GetNamesServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get names service unavailable response
func (o *GetNamesServiceUnavailable) SetPayload(payload *model.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamesServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

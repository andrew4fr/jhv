// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "SDN List",
    "title": "Treasure API",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/get_names": {
      "get": {
        "operationId": "getNames",
        "parameters": [
          {
            "$ref": "#/parameters/name"
          },
          {
            "$ref": "#/parameters/type"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Persons"
          },
          "503": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/state": {
      "get": {
        "operationId": "serviceState",
        "responses": {
          "200": {
            "$ref": "#/responses/State"
          },
          "503": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/update": {
      "get": {
        "operationId": "updateList",
        "responses": {
          "200": {
            "$ref": "#/responses/State"
          },
          "503": {
            "$ref": "#/responses/Error"
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "info": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "person": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "uid": {
          "type": "integer"
        }
      }
    },
    "persons": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/person"
      }
    },
    "state": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "info": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "name": "name",
      "in": "query"
    },
    "type": {
      "type": "string",
      "name": "type",
      "in": "query"
    }
  },
  "responses": {
    "Error": {
      "description": "service error",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "Persons": {
      "description": "persons info",
      "schema": {
        "$ref": "#/definitions/persons"
      }
    },
    "State": {
      "description": "success 200",
      "schema": {
        "$ref": "#/definitions/state"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "SDN List",
    "title": "Treasure API",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/get_names": {
      "get": {
        "operationId": "getNames",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "persons info",
            "schema": {
              "$ref": "#/definitions/persons"
            }
          },
          "503": {
            "description": "service error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/state": {
      "get": {
        "operationId": "serviceState",
        "responses": {
          "200": {
            "description": "success 200",
            "schema": {
              "$ref": "#/definitions/state"
            }
          },
          "503": {
            "description": "service error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/update": {
      "get": {
        "operationId": "updateList",
        "responses": {
          "200": {
            "description": "success 200",
            "schema": {
              "$ref": "#/definitions/state"
            }
          },
          "503": {
            "description": "service error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "info": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "person": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "uid": {
          "type": "integer"
        }
      }
    },
    "persons": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/person"
      }
    },
    "state": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "info": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "name": "name",
      "in": "query"
    },
    "type": {
      "type": "string",
      "name": "type",
      "in": "query"
    }
  },
  "responses": {
    "Error": {
      "description": "service error",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "Persons": {
      "description": "persons info",
      "schema": {
        "$ref": "#/definitions/persons"
      }
    },
    "State": {
      "description": "success 200",
      "schema": {
        "$ref": "#/definitions/state"
      }
    }
  }
}`))
}
